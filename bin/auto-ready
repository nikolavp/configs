#!/bin/bash
# vim: set sw=4 sts=4 et foldmethod=indent :
#
# A script to mark a draft PR as ready if it was able to pass all the checks
# successfully. This is used in flows where you are opening your PRs in draft
# mode and then after a preliminary review from you and all the checks have
# passed, you want to mark it as ready for review by others. This prevents
# notifications from github to reviewers before you are sure that the PR is
# ready for review.
# If only github provided that functionality out of the box.

set -o nounset

if [ $# -lt 1 ];then
    echo Usage:
    echo "$0 <pr-number>"
    exit
fi


# Handle cases where I am just providing the full link of the PR from browser
# i.e. https://github.com/<org>/<repo>/pull/4711
pr_arg=$1
if [[ $pr_arg == *"/pull/"* ]]; then
    pr_arg=$(basename $pr_arg)
    echo "Extracted PR number $pr_arg from url"
fi

number_regex='^[0-9]+$'
if ! [[ $pr_arg =~ $number_regex ]] ; then
   echo "PR is not a number" >&2; 
   exit 1
fi

conclusions=$(gh pr view --json statusCheckRollup $pr_arg | jq '.statusCheckRollup' | jq '.[].conclusion' | grep -v 'SUCCESS')

while [[ ! -z $conclusions ]];do
    if [[ -n $(echo $conclusions | grep FAILURE ) ]];then
        echo "[$(date +%FT%T)] PR $pr_arg failed to build"
        osascript -e 'display notification "There was a failure to build the PR" with title "Failure"'
        exit 1
    fi
    echo "[$(date +%FT%T)] PR $pr_arg is still not ready"
    sleep 5
    conclusions=$(gh pr view --json statusCheckRollup $pr_arg | jq '.statusCheckRollup' | jq '.[].conclusion' | grep -v 'SUCCESS')
done

echo "[$(date +%FT%T)] Marking PR $pr_arg as ready"
gh pr ready $pr_arg
